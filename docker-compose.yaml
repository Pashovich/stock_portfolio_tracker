version: '3.9'

services:
  web:
    build: .
    container_name: django_app
    command: sh -c "/entrypoint.sh" 
    ports:
      - "${DJANGO_PORT}:8000" 
    env_file:
     - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=db
      - REDIS_HOST=redis
    depends_on:
      - db
      - redis
    volumes:
      - .:/app  
      - static_volume:/app/staticfiles

  db:
    image: postgres:15-alpine
    container_name: postgres_db
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./postgres_data:/var/lib/postgresql/data 
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 5s

  redis:
    image: redis:alpine
    container_name: redis_cache
    volumes:
      - ./redis_data:/data  

  nginx:
    build: ./nginx
    volumes:
      - static_volume:/app/staticfiles
    env_file:
      - .env
    ports:
      - "${NGINX_PORT}:80"
    depends_on:
      - web
volumes:
  postgres_data:
  redis_data:
  static_volume: